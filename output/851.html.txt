date
thu
07
nov
1996
gmt
server
ncsa
1
5
content
type
text
html
last
modified
tue
06
aug
1996
gmt
content
length
13119
shore
project
home
page
shore
a
high
performance
scalable
persistent
object
repository
document
contents
objective
overview
release
information
mailing
lists
see
also
shore
version
1
0
on
line
information
source
binaries
and
documentation
the
beta
release
of
shore
version
0
9
3
publications
related
to
shore
people
working
on
shore
latest
research
summary
for
arpa
paradise
project
a
gis
built
on
shore
exodus
project
the
predecessor
to
shore
oo7
benchmark
a
benchmark
for
oodbs
shore
photo
album
uw
madison
database
research
group
uw
madison
cs
department
server
objective
the
objective
of
the
shore
project
is
to
design
implement
and
evaluate
a
persistent
object
system
that
will
serve
the
needs
of
a
wide
variety
of
target
applications
including
hardware
and
software
cad
systems
persistent
programming
languages
geographic
information
systems
satellite
data
repositories
and
multi
media
applications
shore
expands
on
the
basic
capabilities
of
the
widely
used
exodus
storage
manager
developed
at
wisconsin
funded
by
arpa
in
a
number
of
ways
including
support
for
typed
objects
multiple
programming
languages
a
unix
like
hierarchical
name
space
for
named
objects
and
a
unix
compatible
interface
to
objects
with
a
text
field
this
interface
is
intended
to
ease
the
transition
of
applications
from
the
unix
file
system
environment
to
shore
as
existing
unix
tools
such
as
vi
and
cc
will
be
able
to
store
their
data
in
shore
objects
without
modification
basically
a
unix
file
becomes
either
a
single
shore
object
or
the
text
field
of
a
more
complex
object
overview
shore
is
something
of
a
hybrid
system
by
nature
inheriting
characteristics
both
from
object
oriented
database
systems
and
from
file
systems
this
section
briefly
describe
the
basic
features
of
shore
the
paper
shoring
up
persistent
applications
describes
shore
in
much
greater
detail
shore
has
three
major
goals
scalability
support
for
hardware
and
language
heterogeneity
support
for
existing
file
based
applications
when
the
shore
project
began
3
years
ago
these
goals
were
unique
among
the
research
and
commercial
oodbms
community
while
the
odmg
effort
has
also
concentrated
on
providing
some
degree
of
support
for
language
heterogeneity
which
in
turn
facilitates
hardware
heterogeneity
shore
remains
distinguished
by
its
focus
on
scalability
and
support
for
applications
that
depend
on
the
unix
file
system
for
persistent
storage
furthermore
since
the
shore
data
model
sdl
is
basically
compatible
with
the
odmg
data
model
odl
we
expect
that
much
of
the
technology
that
we
develop
can
eventually
be
transferred
to
the
commercial
sector
scalable
architecture
shore
s
software
architecture
is
unique
is
several
ways
first
shore
uses
a
symmetric
peer
to
peer
distributed
architecture
in
shore
every
participating
processor
runs
a
shore
server
process
whether
or
not
the
processor
has
shore
data
disks
attached
the
software
has
been
designed
to
be
scalable
it
can
run
on
a
single
processor
a
network
of
workstations
or
a
large
parallel
processor
such
as
the
intel
paragon
or
ibm
sp1
2
this
design
is
in
contrast
to
the
client
server
architecture
used
by
exodus
and
all
the
oodbms
vendors
while
a
client
server
architecture
is
fine
for
a
design
environment
such
as
is
typically
used
in
software
and
hardware
cad
efforts
it
is
not
scalable
the
second
unique
feature
of
the
shore
architecture
is
its
notion
of
a
value
added
server
by
structuring
the
software
that
runs
in
the
server
with
extensibility
in
mind
it
is
relatively
simple
for
users
to
build
application
specific
servers
for
example
the
paradise
project
is
already
using
the
shore
server
to
build
a
geographic
information
system
for
nasa
s
eosdis
project
we
feel
that
these
two
unique
pieces
of
technology
will
play
a
important
role
in
a
variety
of
future
research
and
commercial
endeavors
for
example
the
digital
libraries
of
the
future
will
almost
certainly
depend
on
the
availability
of
scalable
persistent
object
technology
such
systems
are
going
to
store
retrieve
manipulate
and
transmit
objects
containing
video
and
pictures
as
well
as
text
while
current
oodbms
products
could
be
used
these
systems
are
oriented
toward
dealing
with
gigabytes
and
not
terabytes
of
data
customizability
is
equally
important
the
indexing
retrieval
and
query
processing
mechanisms
needed
for
a
digital
library
are
very
different
from
those
required
for
a
geographic
information
system
language
and
hardware
heterogeneity
objects
in
shore
are
typed
shore
provides
a
single
language
neutral
type
system
that
is
used
to
define
the
types
of
all
shore
objects
this
type
system
is
embodied
in
the
shore
data
language
sdl
which
is
the
language
in
which
shore
object
types
are
defined
sdl
enhances
the
omg
data
model
idl
with
support
for
database
features
such
as
bulk
types
e
g
sets
and
lists
and
persistence
the
provision
of
typed
persistent
objects
simplifies
the
task
of
supporting
heterogeneous
hardware
environments
and
makes
it
feasible
to
support
access
to
persistent
objects
from
multiple
programming
languages
which
is
a
key
objective
of
the
shore
project
as
mentioned
earlier
sdl
is
quite
closely
related
to
odl
the
language
neutral
object
type
definition
language
that
was
recently
proposed
as
a
standard
by
the
oodb
vendor
consortium
odmg
in
terms
of
its
emphasis
however
odmg
has
largely
concentrated
on
providing
a
standardized
interface
to
existing
c
oriented
oodbs
our
focus
is
on
support
for
inter
language
object
sharing
within
a
large
name
space
of
objects
support
for
existing
file
based
applications
a
major
goal
of
shore
is
to
enable
applications
that
currently
use
untyped
byte
oriented
files
for
their
persistent
data
flattening
and
un
flattening
their
data
each
time
it
is
accessed
to
stop
doing
so
such
applications
should
be
able
to
store
their
data
as
typed
structured
objects
for
more
convenient
type
safe
intra
and
inter
program
data
sharing
our
ultimate
hope
is
that
shore
will
displace
byte
oriented
file
systems
such
as
the
unix
file
system
shore
provides
two
major
services
from
a
file
system
standpoint
first
to
support
object
naming
and
space
management
in
a
world
with
many
persistent
objects
shore
provides
a
flexible
tree
structured
unix
like
name
space
in
which
all
persistent
objects
are
reachable
either
directly
or
indirectly
doing
so
gives
shore
users
a
familiar
framework
in
which
to
register
individual
persistent
objects
termed
registered
objects
the
roots
of
large
persistent
data
structures
or
bulk
sets
of
unnamed
objects
termed
anonymous
objects
the
realization
of
this
framework
involves
several
different
kinds
of
shore
file
system
objects
including
directories
pools
which
are
files
containing
anonymous
objects
symbolic
links
and
cross
references
shore
provides
two
mechanisms
to
ease
the
transition
of
legacy
unix
applications
such
as
compilers
editors
and
cad
systems
from
traditional
byte
stream
files
to
shore
first
for
applications
that
can
be
re
linked
shore
provides
a
standard
unix
compatible
file
system
interface
e
g
open
close
read
write
mkdir
chdir
in
order
to
make
access
to
shore
objects
via
unix
file
system
calls
possible
the
definer
of
a
shore
object
type
can
optionally
designate
one
variable
length
byte
string
or
character
string
attribute
of
the
object
as
being
the
object
s
unix
data
programs
that
attempt
to
read
an
object
through
shore
counterparts
of
the
unix
file
system
calls
will
only
see
this
portion
of
the
object
for
legacy
programs
that
wish
to
do
so
without
being
re
linked
it
is
possible
to
nfs
mount
a
shore
file
system
and
access
the
unix
data
contained
in
its
objects
directly
this
makes
it
feasible
for
both
new
and
old
applications
to
access
the
same
set
of
objects
while
old
applications
can
only
access
the
unix
data
component
of
the
object
new
applications
can
define
and
access
other
more
structured
attributes
of
the
object
release
information
below
is
the
latest
time
table
for
the
release
of
shore
these
dates
are
approximate
and
subject
to
change
if
you
have
any
questions
contact
shore_support
cs
wisc
edu
beta
release
0
9
on
may
3
1995
we
had
our
first
beta
release
beta
release
0
9
3
the
second
beta
rlease
of
shore
version
0
9
3
is
now
available
sept
18
1995
it
includes
improved
documentation
more
complete
implementations
of
many
sdl
features
many
bug
fixes
and
ports
to
solaris
hp
ux
linux
version
1
0
on
august
6
1995
we
released
shore
version
1
0
gzip
d
tar
files
of
the
source
documentation
and
a
binary
release
sparc
and
pentium
solaris
2
5
can
be
found
at
lt
ftp
ftp
cs
wisc
edu
shore
1
0
gt
mailing
lists
there
are
two
shore
related
mailing
lists
shore_support
cs
wisc
edu
and
shore_all
cs
wisc
edu
shore_support
cs
wisc
edu
this
mailing
list
reaches
the
shore
development
team
it
is
for
use
by
shore
users
to
submit
questions
comments
and
bug
reports
to
us
you
cannot
subscribe
to
this
mailing
list
shore_all
cs
wisc
edu
this
is
a
mailing
list
for
users
of
and
those
interested
in
shore
this
list
is
managed
by
the
listproc
software
at
the
uw
madison
cs
department
it
is
currently
unmoderated
but
in
the
unlikely
event
that
it
gets
cluttered
with
junk
mail
we
will
moderate
it
mail
messages
if
you
are
interested
in
the
list
but
your
mailbox
is
already
too
cluttered
you
can
sign
up
for
weekly
digests
see
below
for
more
information
more
information
about
the
list
will
be
sent
when
you
subscribe
purpose
of
shore_all
notifying
interested
parties
of
new
releases
and
other
changes
in
the
shore
ftp
archive
requests
for
help
from
other
users
by
default
replies
will
be
sent
only
to
the
sender
rather
than
being
posted
to
the
entire
list
if
you
want
the
entire
list
to
see
your
reply
just
copy
the
reply
to
shore_all
this
list
is
an
public
mailing
list
thus
anyone
may
subscribe
to
it
only
subscribers
may
post
to
the
list
the
existence
of
this
list
is
shown
in
the
listing
returned
by
listproc
when
it
processes
a
lists
request
when
you
subscribe
your
subscription
is
concealed
by
default
that
is
other
subscribers
cannot
obtain
the
membership
list
from
the
listproc
system
subscribing
to
shore_all
to
subscribe
or
to
change
your
subscription
you
must
mail
a
special
message
to
listproc
cs
wisc
edu
to
subscribe
the
content
of
the
message
should
look
like
this
subscribe
shore_all
to
receive
weekly
digests
rather
than
individual
messages
send
this
along
with
your
subscription
or
send
it
in
a
separate
message
set
shore_all
mail
digest
to
un
subscribe
the
content
of
the
message
should
be
unsubscribe
shore_all
to
get
help
on
the
list
processor
the
content
of
the
message
should
be
help
last
modified
mon
mar
18
cst
1996
nancy
hall
nhall
cs
wisc
edu
footnotes
compatibility
with
odl
shore
and
odmg
concurrently
decided
to
use
the
omg
data
model
idl
as
the
starting
point
for
their
data
models
hence
sdl
and
odl
are
very
similar
to
one
another
once
odl
stabilizes
we
can
convert
sdl
to
be
100
compatible
with
odl
