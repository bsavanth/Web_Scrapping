date
wed
20
nov
1996
gmt
server
ncsa
1
4
2
content
type
text
html
last
modified
wed
20
nov
1996
gmt
content
length
26844
c211
and
h211
course
description
c211
and
h211
introduction
to
computer
science
fall
1996
contents
general
information
get
your
network
id
or
an
account
on
copper
or
zinc
a
list
of
tutors
for
c211
motivation
and
description
course
materials
syllabus
and
lecture
scripts
assignments
communication
evaluation
gradebooks
policies
what
s
new
and
what
s
old
11
19
help
and
review
sessions
for
the
final
exam
11
19
student
chapter
of
acm
will
have
their
first
meeting
on
wednesday
november
20
11
12
why
scheme
an
interesting
letter
from
disney
studios
11
6
solutions
to
the
second
midterm
examination
general
information
instructors
david
leake
section
1118
email
leake
cs
indiana
edu
office
lh230d
phone
855
9756
mark
leone
section
1123
email
mleone
cs
indiana
edu
office
lh201g
phone
855
6223
george
springer
section
1128
email
springer
cs
indiana
edu
office
230
b
phone
855
0918
jonathan
sobel
and
erik
hilsdale
section
9060
and
discussion
section
9058
new
home
page
for
this
section
email
jsobel
cs
indiana
edu
and
ehilsdal
cs
indiana
edu
office
230
a
phone
855
4885
associate
instructors
eugene
byon
sections
1124
and
1125
email
ebyon
cs
indiana
edu
office
230
phone
855
9926
peter
drake
sections
1129
email
pedrake
cs
indiana
edu
office
230
phone
855
0918
brian
eyster
sections
1126
and
1127
email
beyster
cs
indiana
edu
office
230
phone
855
0918
steve
ganz
sections
1119
and
1120
email
sganz
cs
indiana
edu
office
230
phone
855
0918
byron
long
sections
1121
and
1122
email
bylong
cs
indiana
edu
office
230
phone
855
0918
prerequisites
2
years
of
high
school
algebra
or
m014
credit
hours
4
lectures
section
1118
tr
1
00
2
15
in
lh102
david
leake
section
1123
mwf
9
05
9
55
in
lh102
mark
leone
section
1128
tr
1
00
2
15
in
lh115
george
springer
section
9060
mwf
9
05
9
55
in
bh304
jonathan
sobel
and
erik
hilsdale
discussion
sections
for
lecture
sections
1118
section
1119
r
2
30
3
20
in
sb221
steve
ganz
section
1120
r
4
30
5
30
in
sb221
steve
ganz
section
1121
f
9
05
9
55
in
sb221
byron
long
section
1122
f
10
10
11
00
in
sb221
byron
long
discussion
sections
for
lecture
section
1123
section
1124
r
11
15
12
05
in
bh104
eugene
byon
section
1125
r
1
25
2
15
in
sb221
eugene
byon
section
1126
f
11
15
12
05
in
sb221
brian
eyster
section
1127
f
1
25
2
15
in
sb221
brian
eyster
discussion
sections
for
lecture
sections
1128
section
1129
r
3
35
4
25
in
lh115
peter
drake
discussion
sections
for
lecture
sections
9060
section
9068
f
11
15
12
05
in
opt107
jonathan
sobel
and
erik
hilsdale
local
newsgroups
ac
csci
c211
ac
csci
h211
cs
students
office
hours
monday
10
00
11
00
mark
leone
1
00
3
00
brian
eyster
2
30
5
00
jonathan
sobel
in
lh230a
3
00
5
00
steve
ganz
tuesday
10
00
12
00
peter
drake
2
30
3
45
george
springer
in
lh230b
2
30
3
45
david
leake
in
lh230d
4
00
6
00
erik
hilsdale
in
lh230a
wednesday
10
00
11
00
mark
leone
1
30
3
30
byron
long
3
00
5
00
eugene
byon
in
lh230
thursday
2
30
3
30
george
springer
in
lh230b
2
30
3
30
david
leake
in
lh230d
2
00
4
00
erik
hilsdale
in
lh230a
if
it
is
difficult
for
you
to
make
these
times
appointments
at
other
times
may
be
made
by
contacting
any
of
the
instructors
or
ais
course
description
programming
is
in
general
the
art
of
solving
problems
the
study
of
computer
programming
is
therefore
the
study
of
solving
problems
with
a
computer
but
it
is
also
much
more
when
a
programmer
writes
a
program
he
or
she
is
actually
constructing
a
model
of
a
process
for
doing
something
such
a
model
is
called
an
algorithm
furthermore
the
programmer
is
concerned
not
only
with
whether
the
program
simply
works
but
also
with
how
well
it
works
and
how
it
interacts
with
both
users
and
other
programs
this
class
is
designed
mainly
to
teach
you
the
art
of
computer
programming
to
that
end
we
shall
try
to
develop
in
you
a
sense
of
style
and
aesthetics
that
will
help
guide
your
programming
efforts
and
we
shall
try
to
develop
your
intuition
about
how
things
work
and
why
you
will
learn
some
of
the
design
principles
that
go
into
the
engineering
of
good
programs
we
shall
teach
you
a
little
computer
science
to
give
you
a
way
of
analyzing
your
programs
and
your
algorithms
and
finding
the
means
to
improve
them
you
will
learn
a
number
of
standard
algorithms
and
some
programming
idioms
standard
ways
of
performing
certain
kinds
of
tasks
to
do
any
programming
we
need
to
choose
a
language
whichever
we
choose
the
language
does
not
place
limits
on
what
our
programs
can
do
but
only
on
what
they
look
like
it
provides
us
with
a
framework
in
which
to
organize
our
ideas
about
processes
and
problem
solving
the
programming
language
we
use
in
this
class
is
scheme
we
have
chosen
it
because
it
provides
a
convenient
mechanism
for
describing
most
of
the
idioms
and
processes
that
programmers
have
found
useful
we
won
t
spend
much
time
teaching
the
details
of
the
language
because
we
don
t
have
to
you
will
find
that
it
is
easy
to
pick
up
as
we
go
along
it
is
often
helpful
to
first
program
using
a
simple
powerful
language
like
scheme
even
if
one
must
then
translate
the
solution
into
a
more
traditional
programming
language
like
c
the
simplicity
of
scheme
allows
us
to
treat
many
computer
science
topics
in
more
depth
than
would
be
possible
if
c
or
c
were
used
for
in
traditional
languages
more
inessential
detail
must
be
mastered
scheme
allows
us
to
give
a
better
impression
of
the
true
joys
and
challenges
of
programming
then
you
will
be
in
a
better
position
to
study
c
in
your
next
computer
science
course
c212
finally
computer
programming
is
still
a
fairly
young
field
and
it
hasn
t
lost
its
sense
of
fun
for
lots
of
people
including
us
we
hope
that
you
will
enjoy
it
as
much
as
we
do
goals
at
the
end
of
the
course
a
student
can
be
expected
to
know
the
following
concepts
and
to
be
able
to
write
good
scheme
programs
the
students
should
be
able
to
use
the
following
data
types
symbols
numbers
booleans
lists
vectors
and
matrices
strings
and
characters
the
students
should
know
how
to
write
programs
in
recursive
iterative
and
imperative
styles
students
should
be
able
to
write
recursive
programs
on
lists
both
those
containing
only
top
level
items
and
those
containing
nested
sublists
tree
recursion
the
students
should
be
able
to
use
procedures
as
first
class
objects
that
is
pass
them
as
arguments
and
also
write
programs
whose
values
are
procedures
this
includes
the
currying
and
composing
of
procedures
the
students
should
understand
the
concept
of
scope
and
environment
they
should
be
able
to
use
locally
defined
procedures
students
should
be
able
to
use
abstraction
both
with
data
in
making
programs
independent
of
the
data
representation
and
also
with
procedures
in
abstracting
the
structure
of
programs
students
should
be
able
to
use
the
input
and
output
routines
and
write
convenient
user
interfaces
for
their
programs
students
should
be
able
to
handle
the
binary
representation
of
numbers
students
should
know
some
of
the
standard
sorting
routines
e
g
insertion
sort
o
n
2
mergesort
and
quicksort
o
n
log
n
and
understand
the
advantages
and
disadvantages
of
each
they
should
also
be
able
to
write
both
linear
and
binary
search
programs
students
should
know
how
to
mutate
various
data
structures
including
lists
vectors
strings
in
addition
they
should
understand
side
effecting
variables
students
should
be
able
to
read
programs
and
have
an
appreciation
of
what
constitutes
good
programming
style
they
should
be
aware
of
the
relative
efficiency
of
programs
certain
topics
will
be
included
if
time
permits
these
include
such
things
as
writing
and
using
syntactic
extensions
developing
an
object
oriented
programming
package
in
scheme
and
using
streams
literate
programming
every
programmer
knows
that
programs
must
be
comprehensible
to
the
computer
the
programming
language
implementation
complains
when
they
are
not
but
with
some
practice
it
is
generally
easy
to
solve
such
problems
what
is
less
appreciated
is
that
programs
must
also
be
comprehensible
to
the
programmer
otherwise
the
programmer
cannot
have
any
confidence
that
the
program
is
correct
a
program
may
easily
be
comprehensible
to
the
computer
but
not
do
what
is
intended
and
only
the
programmer
knows
what
is
intended
in
most
cases
it
is
also
essential
that
programs
be
comprehensible
to
other
programmers
though
this
is
not
typical
of
student
programming
experience
in
the
real
world
programmers
spend
most
of
their
time
modifying
huge
programs
that
were
developed
over
a
long
period
of
time
by
many
other
programmers
modifying
someone
else
s
code
or
even
your
own
a
few
months
later
may
be
a
joy
or
a
nightmare
depending
on
how
clearly
the
program
is
written
thus
we
emphasize
the
importance
literate
programming
writting
programs
that
are
easy
to
understand
relative
to
the
difficulty
of
the
problem
they
solve
literate
programming
is
almost
always
more
important
than
other
programming
goals
such
as
efficiency
and
code
compactness
though
efficiency
and
compactness
are
often
byproducts
of
literate
programming
course
materials
required
g
springer
and
d
friedman
scheme
and
the
art
of
programming
mit
press
mcgraw
hill
1989
we
will
cover
most
of
the
first
three
quarters
of
this
text
the
source
code
is
available
c211
course
packet
available
at
the
white
rabbit
110
s
indiana
ave
this
packet
contains
a
tutorial
on
the
software
systems
the
course
uses
and
the
first
assignment
recommended
d
p
friedman
and
m
felleisen
the
little
schemer
fourth
edition
mit
press
1996
this
little
book
is
the
best
introduction
to
recursive
programming
that
we
know
of
and
is
designed
for
self
study
recursion
is
used
throughout
this
course
but
some
students
require
extra
material
before
they
feel
comfortable
using
it
if
you
are
having
any
difficulty
mastering
recursion
we
strongly
recommend
that
you
get
this
book
and
study
it
on
your
own
interpreters
for
macs
and
pcs
there
is
a
fairly
beautiful
scheme
package
available
for
macintosh
and
a
less
beautiful
one
for
dos
syllabus
and
lecture
scripts
most
of
the
first
three
quarters
of
the
text
scheme
and
the
art
of
programming
will
be
covered
approximately
one
week
will
be
devoted
to
each
of
the
chapters
listed
below
the
links
in
the
following
list
are
to
script
files
that
drive
the
on
line
lecture
presentations
the
script
file
for
chapter
n
may
also
be
accessed
on
the
machine
copper
as
the
file
c211
www
script
n
prof
leone
uses
a
separate
script
for
each
lecture
based
on
the
scripts
below
sometimes
with
more
examples
chapter
1
data
and
operators
emacs
keybindings
chapter
2
procedures
and
recursion
chapter
3
data
abstraction
and
numbers
chapter
4
data
driven
recursion
chapter
5
locally
defined
procedures
poly
alg
ss
poly
rep1
ss
poly
rep2
ss
binary
notation
chapter
6
interactive
programming
chapter
7
abstracting
procedures
chapter
9
using
vectors
chapter
10
sorting
and
searching
chapter
11
mutation
chapter
12
object
oriented
programming
assignments
a
programming
assignment
will
be
due
almost
every
week
the
assignments
will
appear
below
as
they
are
assigned
assignment
n
is
also
available
as
plain
text
in
the
file
c211
www
a
n
f96
txt
links
to
answer
files
with
names
of
the
form
c211
www
ans
n
f96
ss
will
be
added
as
appropriate
assignment
due
answers
1
getting
started
9
11
5
pm
2
simple
procedures
9
18
5
pm
answers
3
simple
recursion
9
25
5
pm
answers
4
more
on
recursion
10
2
5
pm
answers
5
deep
recursion
10
11
fri
5
pm
answers
6
iteration
10
16
5
pm
answers
7
locally
defined
procedures
and
polynomials
10
23
5
pm
answers
8
binary
numbers
data
abstraction
and
trees
10
30
5
pm
answers
9
encodings
and
interactive
programming
11
8
fri
5
pm
answers
10
procedures
as
arguments
and
building
huffman
trees
11
13
5
pm
answers
11
procedural
abstraction
strings
and
vectors
11
26
tue
5
pm
answers
12
assignment
and
mutation
12
4
5
pm
answers
13
sorting
and
searching
12
11
5
pm
answers
course
evaluation
please
turnin
by
5
pm
august
8
thursday
as
submitted
all
programs
must
run
under
chez
scheme
it
is
recommended
that
you
use
the
ucs
university
computing
services
machines
named
copper
and
zinc
new
students
should
have
a
network
id
and
instructions
for
creating
copper
and
zinc
accounts
as
soon
as
you
have
your
account
you
should
configure
it
to
run
emacs
scheme
within
emacs
and
the
handin
program
this
is
done
by
entering
c211
setup
hitting
return
and
logging
out
you
only
have
to
do
this
once
when
you
login
the
next
time
your
account
will
be
configured
for
c211
you
have
to
configure
both
your
copper
and
zinc
accounts
assignments
will
be
posted
on
or
before
wednesday
afternoon
and
will
be
due
electronically
by
5
00
p
m
on
the
wednesday
of
the
following
week
any
written
material
will
be
due
at
the
beginning
of
the
lecture
on
that
thursday
or
friday
late
assignments
will
not
be
accepted
in
computing
the
semester
assignment
average
the
lowest
assignment
grade
will
be
dropped
although
assignments
count
for
only
10
of
the
final
grade
it
is
essential
that
you
do
the
assignments
to
master
the
material
computer
programming
like
playing
a
musical
instrument
can
only
be
mastered
through
lots
of
practice
programming
assignments
are
submitted
using
the
program
c211
handin
in
the
directory
c211
bin
on
copper
and
zinc
the
handin
program
evaluates
and
grades
your
program
s
behavior
and
the
results
are
returned
to
you
almost
immediately
via
email
since
zinc
allows
e
mail
to
be
sent
but
not
received
you
will
have
to
read
the
grading
results
on
the
machine
where
you
normally
read
your
mail
you
may
correct
and
resubmit
your
programs
as
many
as
five
times
until
the
announced
deadline
the
highest
grade
recorded
for
the
assignment
will
be
the
one
that
is
entered
into
the
class
gradebook
in
this
course
you
may
discuss
assignments
with
other
students
do
not
assume
this
is
true
in
all
your
courses
we
expect
you
to
actually
think
through
and
fully
understand
assignment
solutions
we
have
found
that
students
who
copy
someone
elses
work
and
turn
in
something
they
do
not
fully
understand
usually
fail
the
examinations
and
the
10
added
by
having
good
assignment
grades
is
insufficient
to
pass
the
course
teamwork
in
doing
assignments
is
good
as
long
as
each
member
of
the
team
contributes
and
fully
understands
the
programs
this
certainly
means
that
you
should
not
put
your
name
on
a
file
written
by
someone
else
and
submit
it
as
your
own
work
after
the
final
submission
of
an
assignment
it
will
not
only
be
electronically
graded
but
an
associate
instructor
will
also
grade
the
assignment
for
style
good
programming
style
makes
it
easier
to
get
your
programs
working
and
also
develops
the
habit
of
literate
programming
which
as
we
have
already
noted
is
of
great
importance
in
developing
large
programs
in
this
course
good
style
is
also
rewarded
in
the
evaluation
of
exams
for
scheme
programming
consistent
use
of
a
suitable
style
of
program
indentation
is
essential
and
violation
of
the
first
cardinal
rule
of
indentation
will
automaticaly
result
in
loss
of
credit
communication
the
course
newsgroups
ac
csci
c211
and
ac
csci
h211
will
be
used
to
post
announcements
such
as
assignments
exams
and
any
exceptions
to
our
usual
office
hours
you
are
also
encouraged
to
use
it
to
post
questions
related
to
the
course
or
share
related
information
with
the
class
make
a
habit
of
looking
for
new
notes
a
few
times
each
week
on
individual
or
personal
matters
please
feel
free
to
contact
your
instructor
or
associate
instructor
via
email
another
newsgroup
you
should
check
regularly
is
cs
students
which
contains
important
announcements
from
the
computer
science
department
to
all
of
its
students
it
also
contains
interesting
dialogs
on
various
topics
this
course
description
is
accessible
as
an
html
hypertext
markup
language
file
on
the
www
world
wide
web
with
the
url
universal
resource
locator
http
copper
ucs
indiana
edu
c211
home
html
it
will
be
updated
with
additional
information
such
as
programming
assignments
as
the
course
progresses
to
view
a
resource
given
its
url
use
the
netscape
program
on
a
networked
pc
or
mac
netscape
underlines
html
hypertext
links
to
follow
a
link
click
on
it
the
url
for
the
computer
science
department
s
home
page
is
http
www
cs
indiana
edu
home
page
html
from
which
all
sorts
of
information
can
be
obtained
evaluation
10
assignments
28
exam
1
7
30
9
00
p
m
tuesday
october
8
th
study
guide
and
room
assignments
for
the
first
midterm
examination
a
sample
exam
for
the
first
midterm
examination
a
solution
to
the
first
midterm
examination
28
exam
2
7
30
9
00
p
m
tuesday
november
5
th
sample
exam
for
the
second
midterm
examination
study
guide
and
room
assignments
for
the
second
midterm
examination
a
solution
to
the
second
midterm
examination
34
final
exam
sections
1118
and
1128
12
30
2
30
p
m
thursday
december
19
th
sections
1123
10
15
a
m
12
15
p
m
monday
december
16
th
help
and
review
sessions
for
the
final
exam
mid
term
and
final
exams
locations
will
be
announced
gradebooks
the
electronic
gradebook
for
this
course
will
be
updated
with
each
assignment
and
exam
gradebook
for
section
1118
gradebook
for
section
1123
gradebook
for
section
1128
gradebook
for
section
9060
policies
attendance
class
attendance
will
not
be
monitored
although
regular
attendance
and
class
participation
are
strongly
recommended
attendance
at
examinations
is
compulsory
and
make
up
examination
will
normally
not
be
given
no
special
assignments
or
projects
will
be
given
to
help
students
raise
their
grades
academic
integrity
read
the
computer
science
department
s
statement
on
academic
integrity
to
be
sure
you
understand
the
rules
under
which
computer
science
courses
operate
cases
of
academic
dishonesty
will
be
reported
to
the
office
of
student
ethics
a
branch
of
the
office
of
the
dean
of
students
withdrawal
withdrawal
after
wednesday
october
30
th
requires
concurrence
of
the
dean
based
on
extenuating
circumstances
incomplete
grade
an
incomplete
i
final
grade
will
be
given
only
by
prior
arrangement
in
exceptional
circumstances
conforming
to
university
and
departmental
policy
in
which
the
bulk
of
course
work
has
been
completed
in
passing
fashion
