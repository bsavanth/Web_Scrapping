mime
version
1
0
server
cern
3
0
pre5
date
tuesday
26
nov
96
gmt
content
type
text
html
content
length
3598
last
modified
friday
30
aug
96
gmt
programming
languages
and
systems
software
laboratory
programming
languages
and
systems
software
laboratory
the
programming
languages
and
systems
software
laboratory
investigates
fundamental
issues
in
software
systems
including
language
design
and
implementation
execution
monitoring
and
program
visualization
object
oriented
and
distributed
systems
and
software
engineering
the
alamo
monitor
framework
project
c
jeffery
alamo
is
a
framework
for
monitoring
the
execution
of
programs
alamo
supports
two
programming
languages
ansi
c
and
icon
it
consists
of
two
components
the
alamo
monitor
executive
ame
implements
a
shared
address
coroutine
based
thread
model
of
monitoring
the
configurable
c
instrumentation
cci
tool
is
an
ansi
c
preprocessor
that
provides
automatic
software
instrumentation
at
a
semantic
level
as
opposed
to
manual
instrumentation
or
instrumentation
at
the
machine
lexical
or
syntactic
levels
the
proxy
sharing
proxy
server
project
c
jeffery
s
das
the
proxy
sharing
proxy
server
is
an
extension
of
the
cern
web
server
that
investigates
the
application
of
wide
area
demand
driven
replication
techniques
to
sharing
www
resources
our
caching
scheme
is
non
hierarchial
allowing
it
to
scale
and
fit
the
natural
topology
of
the
internet
better
than
existing
schemes
icon
programming
language
c
jeffery
and
the
icon
project
at
the
u
of
arizona
icon
is
a
very
high
level
general
purpose
language
featuring
a
rich
set
of
built
in
datatypes
a
familiar
c
like
syntax
a
novel
goal
directed
expression
evaluation
mechanism
and
easy
to
use
portable
graphics
facilities
current
work
includes
improvements
in
performance
reductions
in
space
requirements
porting
the
graphics
facilities
to
additional
platforms
and
adding
object
oriented
facilities
very
high
level
language
benchmarks
c
jeffery
several
very
high
level
languages
are
now
in
vogue
such
as
perl
tcl
and
java
although
each
has
its
unique
specialties
each
claims
to
be
a
general
purpose
tool
and
to
the
extent
that
they
are
general
purpose
they
can
be
compared
by
implementing
a
set
of
benchmark
applications
in
each
language
timing
results
provide
feedback
to
language
implementors
about
neglected
facilities
and
the
implementation
experience
reveals
missing
features
and
obstacles
encountered
when
using
these
languages
as
general
purpose
tools
software
visualization
at
utsa
c
jeffery
software
visualization
is
the
use
of
visualization
techniques
to
portray
static
and
dynamic
aspects
about
a
software
system
s
control
flow
data
structures
behavior
and
operation
