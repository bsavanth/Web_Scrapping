date
thu
07
nov
1996
gmt
server
ncsa
1
5
content
type
text
html
last
modified
thu
31
oct
1996
gmt
content
length
20386
cs
367
lecture
2
cs
367
2
introduction
to
data
structures
fall
1996
course
email
address
cs367
2
cs
wisc
edu
course
home
page
http
www
cs
wisc
edu
cs367
2
cs367
html
instructor
yannis
ioannidis
office
7357
computer
sciences
office
hours
tuesday
8
45
9
30
am
thursday
8
45
9
30
am
office
phone
263
7764
email
address
yannis
cs
wisc
edu
home
page
http
www
cs
wisc
edu
yannis
yannis
html
contents
news
teaching
assistants
lecture
information
the
c
language
text
grading
exams
course
schedule
assignment
0
programming
assignments
late
policy
cheating
help
program
grading
style
external
documentation
internal
documentation
using
unix
and
vi
the
program
development
cycle
news
assignment
3
assignment
3
is
now
ready
midterm
statistics
some
interesting
exam
statistics
for
section
2
max
98
min
22
median
78
mean
77
92
old
midterm
a
sample
old
midterm
is
now
available
to
help
you
in
your
preparation
for
our
own
midterm
assignment
2
assignment
2
is
now
ready
notes
on
o
notation
and
binary
search
the
notes
on
o
notation
and
binary
search
are
now
available
if
you
want
to
print
either
one
of
them
open
the
file
menu
from
the
ghostview
window
that
shows
you
the
document
and
choose
the
print
menu
item
women
in
computer
science
some
female
faculty
graduate
students
and
undergraduates
have
formed
a
group
called
wics
women
in
computer
science
one
of
the
group
s
goals
is
to
encourage
more
women
to
become
computer
science
majors
so
if
there
are
any
women
in
this
class
who
would
like
to
talk
to
someone
about
majoring
in
computer
science
or
doing
graduate
studies
in
computer
science
or
if
there
are
any
women
who
would
like
some
extra
help
with
their
classwork
they
should
see
suzan
a
computer
science
grad
student
during
her
office
hours
or
email
her
to
make
an
appointment
suzan
s
e
mail
address
is
stodder
cs
wisc
edu
and
her
office
hours
are
tuesday
thursday
1
30
2
30
in
room
1345
assignment
1
assignment
1
is
now
ready
out
of
town
the
first
week
of
classes
i
will
be
out
of
town
at
the
vldb
conference
jim
larus
will
give
the
lectures
for
me
i
will
be
in
class
september
10
th
teaching
assistants
both
people
listed
below
are
teaching
assistants
tas
for
the
course
they
will
be
grading
your
homework
assigments
and
will
be
happy
to
answer
questions
about
the
assignments
or
any
other
aspect
of
the
course
that
is
giving
you
trouble
note
that
tas
are
not
assigned
to
specific
sections
chin
tang
chin
office
3310
computer
sciences
office
hours
monday
9
30
10
30
am
tuesday
2
30
3
30
pm
friday
9
30
10
30
am
office
phone
262
1721
email
address
cchin
cs
wisc
edu
home
page
http
www
cs
wisc
edu
cchin
cchin
html
wei
zhang
office
1343
computer
sciences
office
hours
wednesday
10
00
11
00
am
thursday
9
00
10
00
am
sunday
3
00
4
00
pm
office
phone
262
5596
email
address
weiz
cs
wisc
edu
home
page
http
www
cs
wisc
edu
weiz
weiz
html
lecture
information
lecture
9
30
10
45
tuesday
and
thursday
1325
computer
sciences
and
statistics
the
c
language
cs
367
will
be
taught
using
the
c
programming
language
and
you
will
be
required
to
do
your
programming
assignments
in
c
we
didn
t
choose
c
just
to
make
your
life
more
difficult
most
people
who
become
fluent
in
c
think
it
is
far
superior
to
c
or
pascal
the
use
of
c
is
growing
tremendously
in
the
field
and
the
odds
are
that
if
you
ever
have
to
write
another
program
after
this
course
ends
you
will
be
able
to
write
it
in
c
the
same
statement
is
not
true
about
pascal
c
is
also
widely
available
but
after
an
initial
startup
period
you
will
be
more
productive
in
c
than
in
c
if
you
go
on
to
take
more
computer
science
courses
with
few
exceptions
you
will
be
required
to
use
c
in
those
courses
text
the
text
book
for
this
course
is
data
abstraction
and
problem
solving
with
c
walls
and
mirrors
by
frank
m
carrano
isbn
0
8053
1226
9
this
is
a
well
written
text
that
covers
most
but
not
all
of
the
material
in
this
course
it
also
includes
a
lot
about
c
so
a
separate
text
for
the
language
is
not
necessary
for
my
lectures
i
will
often
but
not
always
be
following
cs
367
lecture
notes
fall
1993
by
david
j
dewitt
these
notes
are
actually
considerably
more
complete
that
simple
lecture
notes
but
they
are
still
short
of
a
true
text
book
there
is
very
little
narrative
text
no
exercises
etc
as
a
recommended
additional
source
you
may
want
to
purchase
these
notes
which
are
available
from
the
doit
documentation
desk
near
the
dayton
street
entrance
of
the
computer
sciences
building
1210
w
dayton
st
if
this
is
the
first
experience
with
unix
for
you
you
will
need
some
information
about
activating
your
account
logging
in
creating
editing
and
manipulating
files
and
compiling
running
and
debugging
programs
the
handout
cs
1000
available
from
the
doit
information
desk
where
the
dewitt
notes
are
available
contains
all
the
key
information
you
will
find
it
invaluable
see
also
the
help
section
below
as
i
mentioned
above
the
lectures
will
often
follow
the
dewitt
notes
although
i
may
supplement
them
with
a
few
handouts
during
the
course
of
the
semester
nonetheless
you
are
responsible
for
all
material
covered
in
lecture
the
exams
will
be
based
on
the
lecture
material
reading
assignments
in
the
notes
and
the
course
assignments
grading
there
will
be
one
or
two
evening
exams
during
the
course
of
the
semester
a
final
exam
and
five
programming
assignments
the
exams
will
determine
50
of
the
final
grade
with
approximately
equal
weight
for
each
one
and
the
programming
assignments
will
count
for
10
each
exams
exam
1
tuesday
october
22
nd
7
15
pm
9
15
pm
1351
chemistry
exam
2
tba
final
exam
wednesday
december
18
th
5
05
pm
7
05
pm
place
tba
course
schedule
the
following
is
the
list
of
topics
that
will
be
covered
in
this
course
a
more
detailed
scheduled
will
be
provided
later
semester
topic
dewitt
s
notes
walls
and
mirrors
introduction
administration
1
42
general
familiarity
basic
stuff
of
c
lecture
2
101
135
app
a
app
c
functions
lecture
3
app
a
pointers
lecture
4
141
150
app
a
records
dynamic
storage
lecture
5
141
150
app
a
lists
lecture
6
150
177
lists
lecture
6
150
177
binary
search
and
o
notation
83
86
393
405
advanced
lists
lecture
7
177
189
advanced
lists
lecture
7
177
189
stacks
lecture
8
249
295
queues
lecture
9
307
344
hashing
lecture
10
591
608
hashing
lecture
10
591
608
recursion
evening
exam
lecture
11
50
93
203
238
trees
lecture
12
439
468
501
502
trees
lecture
12
439
468
501
502
binary
trees
sort
search
lecture
13
468
500
avl
trees
587
590
avl
trees
587
590
graphs
lecture
16
620
646
graphs
lecture
16
620
646
graphs
lecture
16
620
646
graphs
lecture
16
620
646
sorting
lecture
17
405
432
thanksgiving
sorting
lecture
17
405
432
sorting
lecture
17
405
432
to
be
announced
assignment
0
this
is
an
absolute
necessity
to
get
a
grade
other
than
f
bring
in
a
photograph
of
you
it
should
not
be
your
picture
from
your
1
st
birthday
nor
should
it
be
the
one
from
that
boy
girl
scout
trip
in
the
summer
of
1984
other
than
that
it
can
be
color
or
black
and
white
any
size
etc
no
grade
will
be
given
without
a
photo
programming
assignments
proficiency
in
a
programming
language
pascal
c
c
or
fortran
at
the
introductory
level
is
assumed
the
equivalent
uw
madison
prerequisite
course
is
cs
302
assignments
must
be
done
in
c
on
the
designated
machines
these
are
in
the
machine
rooms
on
the
first
floor
of
the
cs
building
i
encourage
you
to
use
these
machines
if
you
prefer
to
use
a
home
computer
you
may
do
so
with
certain
restrictions
you
must
have
a
c
compiler
on
your
home
machine
you
must
log
on
to
your
university
account
often
to
read
email
and
get
copies
of
data
files
finally
we
will
require
that
you
turn
in
your
c
program
electronically
via
email
so
if
you
work
at
home
you
must
make
provisions
to
download
your
programs
to
your
university
account
and
to
make
sure
that
they
compile
and
run
with
the
g
compiler
on
the
sparcstations
i
often
use
electronic
mail
to
notify
students
of
changes
in
assignments
hints
for
programs
etc
i
assume
that
you
will
read
all
electronic
mail
that
i
send
late
policy
no
late
assignment
will
be
accepted
assignments
must
be
turned
in
exactly
when
they
are
due
in
order
to
avoid
lateness
caused
by
machine
loads
coincident
due
dates
for
several
classes
etc
simply
be
sure
to
get
started
right
away
on
each
assignment
things
are
certain
to
go
wrong
now
and
then
so
don
t
wait
until
the
last
minute
to
start
any
exceptions
must
be
approved
by
me
and
you
will
need
a
very
good
excuse
if
you
get
into
trouble
see
me
as
soon
as
possible
cheating
the
computer
science
department
takes
a
very
hard
line
stance
on
cheating
you
are
welcome
to
communicate
with
each
other
on
design
of
algorithms
and
data
structures
but
there
is
to
be
no
sharing
of
code
you
are
also
expected
to
learn
understand
and
obey
the
computer
systems
lab
policies
governing
your
computer
accounts
help
if
you
are
having
problems
with
the
course
work
or
programs
please
let
me
know
as
early
in
the
semester
as
possible
office
hours
policies
if
you
need
help
debugging
a
program
the
best
way
to
get
help
is
to
visit
any
one
of
the
cs
367
ta
s
during
his
office
hours
taking
along
a
current
hard
copy
of
your
program
my
office
hours
are
intended
as
a
time
for
me
to
re
explain
concepts
that
i
have
presented
in
class
but
about
which
you
are
still
confused
or
to
answer
your
specific
questions
about
course
material
i
encourage
you
to
use
email
as
a
reliable
way
to
contact
me
about
any
problems
i
read
and
respond
to
email
several
times
daily
almost
every
day
of
the
week
program
grading
programs
are
graded
on
all
of
the
following
criteria
correctness
the
program
should
behave
correctly
normally
on
typical
input
the
program
should
behave
as
stated
in
the
project
specifications
clarity
the
program
should
be
easy
to
read
and
understand
see
the
notes
on
style
below
for
more
information
about
clarity
robustness
correct
behavior
in
extreme
or
unusual
situations
the
program
should
handle
such
situations
in
a
reasonable
and
logical
manner
that
is
it
should
not
simply
blow
up
quality
of
test
data
the
test
data
for
the
program
should
demonstrate
all
facets
of
the
program
s
capabilities
including
unusual
cases
efficiency
avoid
unnecessarily
inefficient
algorithms
or
constructs
however
efficiency
should
never
be
pursued
at
the
expense
of
clarity
modularity
the
program
should
be
modular
and
should
make
effective
use
of
parameters
completeness
you
should
incorporate
all
information
into
your
program
there
should
be
no
need
for
any
sort
of
extra
paper
documentation
generality
the
program
should
be
as
general
as
possible
subject
to
consideration
of
efficiency
and
clarity
you
should
avoid
arbitrary
limitations
such
as
a
bound
on
the
size
or
complexity
of
the
input
whenever
possible
when
limitations
are
necessary
they
should
be
expressed
as
defined
constants
near
the
top
of
the
program
so
that
they
can
be
easily
changed
the
only
numeric
literals
that
should
appear
in
your
program
are
those
values
not
very
likely
to
change
such
as
0
1
or
3
1415926535
style
use
meaningful
identifier
names
use
a
consistent
naming
scheme
for
identifier
names
a
suggested
convention
is
as
follows
int
variable_name
int
function_name
int
argument
const
int
defined_constant
1234
enum
enumtype
value1
value2
class
classname
do
not
put
multiple
statements
on
a
single
line
skip
lines
between
functional
groups
of
code
use
a
clear
and
consistent
indentation
style
see
the
dewitt
notes
for
a
suggested
style
indent
continued
statements
if
loops
etc
line
up
s
and
s
label
s
meaningfully
e
g
while
done
external
documentation
this
should
be
included
as
a
long
comment
at
the
beginning
of
your
program
it
is
addressed
to
both
the
typical
user
and
to
someone
who
wants
to
know
superficially
how
the
program
works
include
your
full
name
and
student
id
at
the
beginning
of
the
comment
give
a
general
description
of
what
the
program
does
tell
how
to
use
the
program
how
to
call
it
format
of
data
give
limitations
bugs
special
features
and
assumptions
made
describe
negative
as
well
as
positive
aspects
of
the
program
if
you
don
t
include
negatives
we
will
assume
you
were
unaware
of
them
information
included
in
the
assignment
about
the
problem
description
need
not
be
repeated
but
may
be
briefly
summarized
for
the
first
point
above
a
statement
referring
the
user
to
the
assignment
document
is
then
sufficient
note
that
this
only
applies
to
the
problem
description
internal
documentation
there
are
four
main
types
of
internal
documentation
headers
comments
at
the
headers
of
functions
classes
and
major
data
structures
should
describe
their
purpose
assumptions
about
their
parameters
and
the
main
outline
of
any
algorithms
they
use
declarations
comments
next
to
a
declaration
of
a
variable
or
data
member
should
provide
extra
information
not
conveyed
by
the
identifier
s
name
the
name
of
a
variable
should
tell
as
much
about
it
as
is
possible
without
making
it
too
long
additional
information
can
be
supplied
by
a
comment
for
example
int
top
index
of
last
element
added
to
stack
you
should
use
comments
to
explain
parameters
as
well
as
local
variables
within
segments
of
code
tricky
or
opaque
sections
of
code
should
be
avoided
but
sometimes
they
are
necessary
in
such
cases
a
comment
can
help
the
reader
understand
what
s
going
on
between
segments
of
code
these
comments
clarify
the
top
level
outline
of
your
algorithm
using
unix
and
vi
many
people
working
with
unix
for
the
first
time
will
find
that
it
takes
some
time
to
become
comfortable
with
it
this
is
particularly
true
if
your
only
previous
programming
experience
is
with
pascal
using
macpascal
on
a
macintosh
i
strongly
urge
you
to
put
in
the
time
early
in
the
semester
to
become
comfortable
with
unix
while
this
time
may
be
painful
it
is
time
well
spent
also
you
may
wish
to
attend
a
unix
tutorial
they
will
be
held
in
rooms
1240
comp
sci
in
two
sessions
on
each
of
the
following
days
tba
you
will
want
to
pick
up
a
copy
of
cs
1000
before
you
go
the
program
development
cycle
the
program
development
cycle
in
a
unix
environment
is
for
edit
your
program
vi
program
c
compile
your
program
g
wall
g
program
c
if
there
are
compilation
errors
continue
run
your
program
a
out
lt
inputfile
gt
outputfile
look
at
your
output
vi
outputfile
or
more
outputfile
if
there
are
no
errors
break
if
you
are
too
tired
to
continue
print
a
listing
to
take
home
pr
program
c
inputfile
outputfile
lpr
goto
home
debug
the
program
gdb
a
out
run
quit
you
re
done
turn
in
the
result
submission
instruction
to
be
given
out
later
yannis
cs
wisc
edu
mon
aug
19
cdt
1996
