date
wednesday
20
nov
96
gmt
server
ncsa
1
3
mime
version
1
0
content
type
text
html
last
modified
friday
21
jun
96
gmt
content
length
8223
performance
prediction
measurement
and
prediction
of
parallel
program
performance
nsf
cise
grant
ccr
9510173
faculty
tom
leblanc
leblanc
cs
rochester
edu
in
collaboration
with
mark
crovella
crovella
cs
bu
edu
graduate
students
wagner
meira
meira
cs
rochester
edu
alex
poulos
poulos
cs
rochester
edu
nikolaos
hardavellas
nikolaos
cs
rochester
edu
project
summary
carnival
is
a
tool
designed
to
automate
the
process
of
understanding
the
performance
of
parallel
programs
it
supports
performance
measurement
modeling
tuning
and
visualization
carnival
measurements
are
based
on
predicate
profiling
which
quantifies
the
time
spent
in
each
category
of
overhead
during
execution
our
first
implementation
of
predicate
profiling
was
implemented
on
the
ksr
1
we
now
have
implementations
for
the
sgi
challenge
multiprocessor
the
ibm
sp
2
a
network
of
sun
workstations
running
pvm
and
a
cluster
of
alpha
workstations
carnival
is
a
novel
attempt
to
automate
the
cause
and
effect
inference
process
for
performance
phenomena
in
particular
carnival
currently
supports
waiting
time
analysis
an
automatic
inference
process
that
explains
each
source
of
waiting
time
in
terms
of
the
underlying
causes
instead
of
simply
identifying
where
it
occurs
we
are
now
developing
a
similar
technique
to
explain
the
causes
of
communication
our
ultimate
goal
is
to
combine
the
accuracy
of
empirical
performance
measurement
with
the
predictive
power
of
analytic
performance
modeling
towards
that
end
carnival
supports
lost
cycles
analysis
which
uses
a
priori
knowledge
of
the
sources
and
characteristics
of
the
overhead
categories
in
parallel
systems
to
guide
and
constrain
the
modeling
process
the
lost
cycles
toolkit
which
we
are
integrating
within
carnival
combines
empirical
model
building
techniques
from
statistics
with
measurement
and
modeling
techniques
for
parallel
programs
carnival
is
also
a
visualization
tool
that
provides
a
link
between
performance
measurements
and
the
source
code
the
interface
presents
the
original
source
code
in
a
window
along
the
left
hand
side
of
the
source
is
a
grey
scale
scroll
bar
that
indicates
the
amount
of
time
spent
in
each
portion
of
the
source
code
summed
across
all
processors
along
the
right
hand
side
of
the
source
code
are
color
bars
that
indicate
the
percent
of
time
spent
in
each
overhead
category
by
that
section
of
source
code
again
summed
across
all
processors
pop
up
windows
are
used
during
modeling
and
waiting
time
analysis
the
carnival
implementation
comprises
about
15
000
lines
of
tcl
tk
and
c
source
code
it
has
been
installed
at
the
cornell
theory
center
and
we
plan
to
make
it
more
widely
available
soon
we
are
currently
porting
the
instrumentation
library
the
only
machine
dependent
portion
of
the
tool
to
clusters
of
dec
alphas
connected
by
the
dec
memory
channel
related
publications
crovella
m
r
bianchini
t
leblanc
e
markatos
and
r
wisniewski
using
communication
to
computation
ratio
in
parallel
program
design
and
performance
prediction
in
proc
4
th
ieee
symposium
on
parallel
and
distributed
processing
dallas
texas
december
1992
pp
238
245
crovella
m
and
t
leblanc
performance
debugging
using
parallel
performance
predicates
in
proc
3
rd
acm
onr
workshop
on
parallel
and
distributed
debugging
pp
140
150
may
1993
crovella
m
and
t
j
leblanc
the
search
for
lost
cycles
a
new
approach
to
performance
tuning
of
parallel
programs
in
proc
supercomputing
94
washington
d
c
november
1994
pp
600
609
also
available
as
technical
report
479
computer
science
dept
univ
of
rochester
december
1993
crowl
l
a
m
crovella
t
j
leblanc
and
m
l
scott
the
advantages
of
multiple
parallelizations
in
combinatorial
search
j
of
parallel
and
distributed
computing
21
1
april
1994
pp
110
123
also
available
as
technical
report
451
computer
science
dept
univ
of
rochester
april
1993
crovella
m
performance
prediction
and
tuning
of
parallel
programs
ph
d
dissertation
tr
573
computer
science
department
university
of
rochester
august
1994
mark
crovella
thomas
j
leblanc
wagner
meira
jr
parallel
performance
prediction
using
the
lost
cycles
toolkit
tr
580
computer
science
department
university
of
rochester
may
1995
wagner
meira
jr
modeling
performance
of
parallel
programs
tr
589
computer
science
department
university
of
rochester
june
1995
wagner
meira
jr
thomas
j
leblanc
and
alexandros
poulos
performance
visualization
and
tuning
with
carnival
acm
sigmetrics
symp
on
parallel
and
distributed
tools
may
1996
pp
1
10
related
projects
aims
nasa
ames
falcon
georgia
tech
pablo
university
of
illinois
paradyn
university
of
wisconsin
poirot
university
of
oregon
tass
georgia
tech
tau
university
of
oregon
other
information
there
is
a
new
symposium
on
parallel
and
distributed
tools
sponsored
by
acm
sigmetrics
the
symposium
has
a
home
page
and
was
held
may
1996
as
part
of
the
acm
federated
conference
in
philadelphia
pa
see
the
proceedings
of
that
symposium
for
papers
on
the
latest
work
in
this
area
the
parallel
tools
consortium
was
formed
to
help
coordinate
tool
development
in
the
parallel
processing
community
see
their
home
page
for
a
list
of
projects
approved
by
the
consortium
as
well
as
a
comprehensive
list
of
research
projects
on
parallel
tools
the
cornell
theory
center
maintains
a
list
of
parallel
tools
including
forge
paragraph
parascope
and
upshot
and
associated
documentation
for
an
introduction
to
parallel
computing
and
a
discussion
of
related
performance
issues
see
ian
foster
s
on
line
text
designing
and
building
parallel
programs
last
modified
june
21
1996
tom
leblanc
leblanc
cs
rochester
edu
