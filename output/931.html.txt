date
tue
26
nov
1996
gmt
server
ncsa
1
5
content
type
text
html
last
modified
thu
07
mar
1996
gmt
content
length
6333
logic
and
functional
programming
group
sfu
logic
and
functional
programming
group
sfu
address
simon
fraser
university
burnaby
b
c
canada
v5a
1
s6
phone
604
291
3426
fax
604
291
3045
director
ver
oacute
nica
dahl
school
of
computing
science
sfu
contact
fred
popowich
school
of
computing
science
sfu
members
harvey
abramson
department
of
computer
science
aizu
university
hassan
a
iuml
t
kaci
mpr
teltech
senior
nserc
chair
in
intelligent
software
systems
romas
aleliunas
center
for
systems
science
sfu
steve
thomason
department
of
mathematice
sfu
warren
burton
school
of
computing
science
sfu
phil
winne
faculty
of
education
sfu
jim
delgrande
school
of
computing
science
sfu
bill
havens
school
of
computing
science
sfu
jia
wei
han
school
of
computing
science
sfu
lou
hafer
school
of
computing
science
sfu
ron
harrop
department
of
mathematics
sfu
david
poole
department
of
computer
science
ubc
michael
rochemont
department
of
linguistics
ubc
bill
wadge
department
of
computer
science
university
of
victoria
maarten
van
emden
department
of
computer
science
university
of
victoria
associate
members
richard
dearmond
department
of
linguistics
sfu
john
jones
school
of
engineering
sfu
visiting
scientists
dominique
vellard
d
eacute
partement
d
informatique
universit
eacute
de
nantes
paul
tarau
d
eacute
partement
d
informatique
universit
eacute
de
moncton
post
docs
jamie
andrews
genesis
the
logic
and
functional
programming
group
was
formally
established
in
1990
as
an
independent
research
group
under
sfu
s
policy
ac
35
it
is
a
strongly
interdisciplinary
group
comprising
members
from
six
sfu
units
computing
sciences
linguistics
mathematics
centre
for
systems
science
education
engineering
two
ubc
units
linguistics
computinc
sciences
and
from
the
university
of
victoria
and
aizu
university
in
japan
area
logic
programming
is
the
art
of
using
logic
to
describe
knowledge
in
a
more
human
oriented
way
than
is
possible
with
traditional
programming
languages
this
is
achieved
by
describing
a
problem
domain
in
terms
of
facts
and
rules
written
in
a
simple
subset
of
first
order
logic
a
hidden
theorem
prover
can
then
solve
a
particular
problem
in
that
domain
by
deducing
as
needed
further
facts
from
the
facts
and
rules
stored
thus
we
can
program
declaratively
largely
in
terms
of
what
needs
to
be
done
rather
than
of
how
to
do
it
logic
programming
has
become
the
heart
of
the
fifth
generation
computing
project
objectives
the
group
s
objectives
are
to
further
the
state
of
the
art
on
the
theoretical
and
practical
aspects
of
developing
declarative
programming
tools
in
particular
logic
programming
functional
programming
constraint
logic
programming
and
logic
grammars
to
investigate
the
uses
of
these
tools
for
concrete
fifth
generation
computing
applications
and
to
facilitate
result
transfers
and
collaborations
with
other
academic
units
and
with
industry
specific
research
interests
building
on
existing
logic
or
functional
programming
tools
our
group
develops
new
tools
e
g
logic
grammars
investigates
their
theoretical
and
implementation
aspects
and
develops
fifth
generation
software
in
areas
such
as
natural
language
processing
front
ends
to
knowledge
based
systems
analysis
generation
and
translation
linguistic
theory
automation
deductive
databases
knowledge
representation
constraint
logic
programming
hardware
design
probabilistic
systems
and
expert
systems
related
areas
such
as
neural
networks
and
parallelism
are
also
investigated
collaborations
group
members
have
a
solid
record
of
successful
collaboration
with
industry
including
a
record
setting
research
contract
with
ibm
canada
for
generating
machine
readable
error
messages
a
research
contract
with
the
french
government
for
the
automatic
consultation
of
industrial
catalogues
in
french
and
two
research
contracts
with
the
canadian
workplace
automation
research
centre
in
laval
for
the
automatic
translation
of
agricultural
reports
the
group
also
has
collaboration
agreements
with
european
universities
for
discussing
further
potential
collaborations
please
contact
the
group
s
director
dr
ver
ocute
nica
dahl
at
604
291
3372
equipment
the
group
s
laboratory
located
in
asb
10855
contains
a
sun
sparcstation
ipx
which
runs
quintus
prolog
a
macintosh
lcii
which
runs
als
and
lpa
prolog
and
ibm
at
personal
computer
and
several
video
terminals
both
the
sparcstation
and
the
mac
were
purchased
with
nserc
css
and
prg
equipment
grants
the
ibm
at
and
the
terminals
were
purchased
with
funds
from
an
ibm
sur
grant
and
an
nserc
operating
grant
respectively
acknowledgements
the
group
gratefully
acknowledges
financial
support
from
nserc
css
and
prg
in
the
form
of
infrastructure
and
equipment
grants
and
is
also
grateful
to
sfu
and
css
for
the
use
of
their
facilities
