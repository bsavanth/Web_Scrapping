mime
version
1
0
server
cern
3
0
date
sunday
24
nov
96
gmt
content
type
text
html
content
length
8757
last
modified
thursday
03
oct
96
gmt
computer
science
212
computer
science
212
fall
1996
course
information
august
29
1996
cs212
is
an
introductory
course
covering
a
broad
range
of
computer
science
concepts
and
techniques
including
data
abstraction
recursion
program
correctness
generic
functions
object
oriented
programming
pattern
matching
and
languages
and
their
evaluators
we
use
the
dylan
language
an
object
oriented
dynamic
language
developed
at
apple
computer
which
is
well
suited
for
covering
a
broad
range
of
introductory
computer
science
topics
this
is
not
a
course
about
the
dylan
language
it
just
happens
to
be
the
quot
notation
quot
that
we
have
chosen
for
writing
programs
the
major
goals
of
the
course
are
to
teach
students
how
to
think
clearly
about
programs
and
programming
and
to
provide
a
toolbox
of
modern
programming
techniques
that
will
be
applicable
in
any
language
what
course
to
take
students
often
wonder
whether
to
take
cs211
or
cs212
cs211
focuses
on
programming
skills
in
the
object
oriented
language
java
whereas
cs212
provides
exposure
to
a
broad
range
of
computational
and
programming
problems
using
a
number
of
programming
paradigms
including
functional
object
oriented
and
imperative
programming
techniques
if
you
have
a
good
cs
background
or
good
formal
skills
e
g
mathematics
or
physics
you
should
probably
take
cs212
transfers
between
cs211
and
cs212
in
either
direction
are
encouraged
during
the
first
two
weeks
reaching
us
the
best
way
to
reach
the
course
staff
is
by
posting
questions
or
comments
using
the
cs212
web
site
http
www
cs
cornell
edu
info
courses
current
cs212
this
site
contains
all
course
materials
and
runs
a
conote
server
which
allows
students
and
staff
to
post
questions
and
answers
as
quot
annotations
quot
to
the
handouts
and
problem
sets
in
order
to
access
the
web
site
you
will
need
to
request
a
user
id
and
password
for
the
conote
system
to
do
this
simply
go
to
the
cs212
home
page
and
follow
the
instructions
your
user
id
and
password
will
be
created
by
monday
if
you
request
them
this
week
you
can
also
reach
the
course
staff
is
by
sending
email
to
cs212
cs
cornell
edu
but
this
should
not
be
used
for
asking
questions
about
problem
sets
or
handouts
use
the
web
site
who
we
are
dan
huttenlocher
professor
4119
upson
tobias
mayr
ta
5148
upson
james
hamblin
ugrad
ta
robert
szewczyk
ugrad
ta
justin
voskuhl
ugrad
ta
andras
ferencz
consultant
melissa
ho
consultant
when
we
meet
lectures
are
tuesday
and
thursday
at
10
10
in
b11
kimball
and
recitations
are
monday
and
wednesday
at
1
25
2
30
or
3
35
recitations
expand
on
the
material
in
lecture
and
provide
more
opportunity
to
ask
questions
consulting
hours
for
help
with
problem
sets
or
other
questions
will
be
held
from
7
pm
until
midnight
the
two
evenings
before
each
problem
set
is
due
see
schedule
below
thus
for
problem
sets
due
on
a
tuesday
there
will
be
consulting
hours
sunday
and
monday
evenings
and
for
those
due
on
a
thursday
there
will
be
consulting
hours
tuesday
and
wednesday
evenings
consulting
hours
are
in
the
public
mac
lab
in
b7
upson
office
hours
are
james
hamblin
tba
dan
huttenlocher
t
1
00
2
00
tobias
mayr
f
12
15
1
15
robert
szewczyk
tba
justin
voskuhl
tba
course
materials
there
is
no
textbook
for
this
course
there
will
be
course
handouts
and
lecture
notes
which
will
be
available
both
in
hardcopy
and
on
the
course
web
site
the
dylan
interpreter
is
available
free
on
the
course
web
site
and
was
developed
by
justin
voskuhl
for
this
class
it
is
implemented
in
java
and
thus
will
run
under
any
java
capable
web
browser
the
best
current
browser
it
changes
almost
weekly
is
netscape
3
0
for
windows95
nt
which
has
borland
s
just
in
time
java
compiler
there
are
also
standalone
versions
available
that
you
can
download
onto
your
computer
if
you
do
not
want
to
use
the
web
browser
version
one
word
of
warning
if
you
download
a
standalone
dylan
onto
your
machine
make
sure
that
you
are
using
the
most
recent
version
by
checking
the
web
site
course
requirements
students
are
responsible
for
all
material
in
the
assigned
readings
as
well
as
that
covered
in
lectures
and
in
recitations
there
will
be
six
problem
sets
two
preliminary
exams
and
a
final
exam
a
schedule
is
given
below
each
problem
set
will
be
a
combination
of
written
exercises
and
a
programming
assignment
course
grades
will
be
based
on
a
combination
of
the
problem
sets
and
exam
scores
the
problem
sets
will
account
for
approximately
one
half
of
the
total
grade
no
late
assignments
will
be
accepted
we
will
generally
grade
assignments
immediately
and
return
them
the
following
class
period
you
should
try
to
complete
the
programming
assignments
early
as
we
will
not
accept
late
work
the
best
use
of
your
time
and
the
machine
s
time
is
to
think
about
the
problems
before
sitting
down
at
the
computer
no
matter
how
many
times
we
say
this
it
takes
a
long
time
to
sink
in
think
about
the
problems
before
sitting
down
at
the
computer
policy
on
joint
work
much
of
the
learning
in
this
course
comes
from
doing
the
programming
problems
you
may
work
jointly
with
one
other
person
on
the
assignments
no
more
than
two
people
should
work
together
however
if
you
work
together
with
someone
you
must
submit
a
single
joint
assignment
with
both
names
on
it
under
no
circumstances
may
you
hand
in
work
done
with
or
by
someone
else
under
your
own
name
if
in
doubt
credit
the
person
s
from
whom
you
got
help
you
would
be
amazed
at
how
easy
it
is
to
tell
when
people
work
together
on
problem
sets
so
please
don
t
make
life
unpleasant
for
all
of
us
by
breaking
these
rules
public
lab
facilities
cit
and
various
colleges
on
campus
provide
public
macintosh
and
pc
facilities
you
may
use
your
own
machine
or
the
public
ones
the
cs
department
does
not
provide
computer
facilities
for
this
course
the
course
consultants
will
be
available
in
the
b7
upson
mac
lab
see
above
problem
set
due
dates
and
exam
dates
all
problem
sets
are
due
before
2
am
on
the
due
date
for
example
an
assignment
due
tuesday
must
be
submitted
electronically
to
the
course
server
by
2
am
on
tuesday
that
is
late
monday
night
no
late
assignments
are
accepted
so
make
sure
you
submit
your
final
solution
by
the
correct
time
and
date
9
12
assignment
1
9
24
assignment
2
10
8
assignment
3
10
17
prelim
1
7
30
pm
10
29
assignment
4
11
12
assignment
5
11
19
prelim
2
7
30
pm
12
5
assignment
6
12
19
final
exam
see
exam
schedule
lecture
outline
8
29
the
study
of
computation
and
an
introduction
to
dylan
9
3
function
abstraction
and
the
substitution
model
of
evaluation
9
5
procedures
and
processes
iteration
recursion
and
induction
9
10
higher
order
procedures
functional
arguments
and
values
9
12
analysis
of
algorithms
orders
of
growth
9
17
data
abstraction
structures
contracts
and
implementations
9
19
hierarchical
data
lists
trees
and
the
need
for
quotation
9
24
recursive
list
processing
and
reasoning
about
lists
9
26
symbolic
differentiation
an
extended
example
10
1
generic
operations
type
dispatching
and
generic
functions
10
3
generic
operations
polynomial
arithmetic
system
10
8
assignment
and
the
environment
model
of
evaluation
10
10
assignment
and
local
state
variables
10
17
objects
with
state
and
object
oriented
programming
10
22
object
oriented
programming
and
inheritance
10
24
multimethods
and
more
about
object
oriented
programming
10
29
mutable
data
stacks
and
queues
10
31
mutable
data
heaps
heapsort
and
priority
queues
11
5
the
metacircular
evaluator
dylan
in
dylan
11
7
variations
on
expression
evaluation
11
12
compilation
and
optimization
11
14
streams
11
19
infinite
streams
11
21
nonlocal
exits
catch
and
throw
11
26
garbage
collection
and
the
illusion
of
infinite
memory
12
3
topics
in
cs
randomization
and
quicksort
12
5
topics
in
cs
computability
