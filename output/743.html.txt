date
tue
26
nov
1996
gmt
server
ncsa
1
4
1
content
type
text
html
last
modified
mon
11
nov
1996
gmt
content
length
5302
cs
310
computing
languages
cs
310
computing
languages
course
description
major
features
of
good
programming
languages
with
primary
emphasis
on
language
features
and
their
role
in
writing
good
software
programming
language
design
alternatives
various
types
of
languages
including
procedure
data
flow
functional
and
object
oriented
languages
course
goals
to
explore
the
notion
of
what
a
programming
language
really
is
to
investigate
programming
paradigms
imperative
object
oriented
functional
programming
the
class
is
not
an
overview
of
a
variety
of
languages
but
a
deep
view
of
programming
paradigms
list
of
topics
covered
tools
for
symbolic
programming
induction
recursion
and
scope
syntactic
abstraction
and
data
abstraction
reduction
rules
and
imperative
programming
interpreters
parameter
passing
object
oriented
languages
type
checking
and
inference
text
daniel
friedman
mitchell
wand
and
christopher
haynes
essentials
of
programming
languages
the
mit
press
and
mcgraw
hill
book
company
sixth
printing
1995
grading
for
the
course
two
examinations
during
the
semester
each
worth
100
points
exam
1
october
11
exam
2
november
20
comprehensive
final
examination
worth
200
points
assignments
during
the
semester
total
worth
of
100
points
the
instructor
for
this
course
john
dickinson
his
email
address
is
johnd
syllabus
for
cs
310
assignments
in
order
to
use
records
as
defined
and
discussed
in
the
text
you
will
need
to
either
download
the
definitions
for
records
to
your
directories
and
then
load
them
into
scheme
or
you
will
need
to
use
this
load
command
load
usr
local
lib
mit
scheme
records
scm
assignment
1
assignment
2
assignment
3
assignment
4
assignment
5
class
notes
notes
on
the
environment
model
this
material
was
covered
in
class
oct
28
30
revised
chapter
6
parameter
passing
you
should
read
this
carefully
before
you
print
it
out
my
book
is
the
sixth
printing
1995
and
i
think
it
has
all
the
proper
modifications
to
chapter
6
if
you
have
an
older
book
you
might
need
to
print
this
chapter
out
when
printing
i
d
suggest
using
one
of
the
laser
printers
that
duplexes
laser13
or
laser25
with
the
duplex
option
oduplex
the
missing
chapter
13
type
checking
errata
for
essentials
of
programming
languages
this
is
especially
useful
if
you
have
an
older
version
of
the
book
this
errata
gives
changes
and
at
what
printing
the
changes
occurred
paper
on
types
and
polymorphism
this
is
an
important
paper
on
type
data
abstraction
and
polymorphism
by
lucia
cardelli
and
peter
wegner
it
appeared
in
computer
surveys
december
1985
and
is
reproduced
with
permission
it
is
in
postscript
format
all
of
the
program
code
has
been
provided
by
the
authors
of
essentials
of
programming
languages
the
scheme
language
scheme
is
a
dynamically
typed
functional
language
descended
from
lisp
several
scheme
manuals
are
available
through
the
web
the
programming
manual
for
scheme
this
is
a
reference
for
the
scheme
language
itself
the
mit
scheme
reference
manual
this
describes
the
run
time
environment
and
i
o
facilities
the
mit
scheme
user
s
manual
this
describes
the
read
eval
print
loop
debugging
and
loading
and
compiling
files
in
addition
to
on
line
manuals
you
might
wish
to
see
these
on
line
resources
about
scheme
this
site
gives
many
pointers
to
information
about
scheme
and
implementations
of
scheme
there
is
also
a
scheme
newsgroup
at
comp
lang
scheme
there
is
even
an
on
line
scheme
interpreter
so
that
you
can
try
scheme
directly
on
the
web
final
exam
schedule
the
final
examination
will
be
comprehensive
that
is
it
will
cover
all
the
topics
we
study
this
semester
section
1
12
30
mwf
final
is
december
18
wednesday
1
00
3
00
pm
