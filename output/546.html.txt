date
wed
20
nov
1996
gmt
server
ncsa
1
5
1
last
modified
mon
18
nov
1996
gmt
content
type
text
html
content
length
12996
cps
108
software
design
and
implementation
cps
108
software
design
and
implementation
fall
1996
object
oriented
programming
design
and
analysis
requirements
syllabus
books
assignments
code
project
groups
teaching
tools
making
a
toonces
presentation
overview
a
description
of
the
course
and
an
overview
of
what
is
covered
requirements
there
will
be
a
large
group
project
four
to
six
person
teams
two
smaller
group
projects
and
two
individual
mastery
projects
the
mastery
projects
are
designed
to
ensure
that
everyone
who
completes
the
course
is
certified
as
capable
of
writing
and
understanding
reasonably
complex
c
programs
since
some
people
on
the
large
team
project
may
not
write
any
c
code
the
mastery
projects
are
necessary
for
this
certification
one
of
the
mastery
projects
will
also
use
java
there
will
be
at
least
three
written
smaller
assignments
programs
grading
small
assignments
class
presentation
class
participation
5
mastery
exams
20
small
group
projects
35
large
group
project
40
syllabus
the
syllabus
has
information
about
readings
and
topics
for
discussion
assignments
grepple
design
due
monday
september
9
prototype
friday
september
13
final
project
due
monday
september
16
toonces
the
object
oriented
networked
calendar
extraction
system
groups
for
toonces
revised
due
dates
and
submission
guidelines
for
design
what
to
turn
in
for
toonces
making
a
toonces
presentation
mastery
i
templated
deques
due
october
7
there
will
be
a
group
project
started
during
this
time
mastery
ii
boggle
joggle
due
december
9
preliminary
joggle
code
see
also
ola
cps108
joggle
jogglereader
java
jogglegraph
java
joggleplay
java
jogglefe
java
joggapp
java
bogdict
txt
code
examples
java
in
a
nutshell
all
the
examples
from
the
o
reilly
book
java
in
a
nutshell
these
are
accessible
here
as
source
and
runnable
applets
and
also
in
ola
cps108
nutshell
on
both
cs
and
acpub
machines
templated
map
classes
including
an
abstract
base
class
and
two
implementations
unsorted
vector
and
hash
table
map
h
abstract
base
class
uvmap
h
unsorted
vector
interface
uvmap
cc
unsorted
vector
implementation
hmap
h
hash
table
interface
hmap
cc
hash
table
implementation
iterator
h
iterator
base
class
uviterator
h
iterator
class
for
uv
map
iterator
cc
implementation
of
uvmap
iterator
hiterator
h
iterator
class
for
hashtable
map
hiterator
cc
implementation
of
hashtable
map
iterator
iterproxy
h
proxy
class
for
iterator
pointer
proxy
a
word
tracking
program
counts
occurrences
of
all
words
in
a
file
that
uses
map
classes
is
available
words
cc
the
main
source
code
file
templatewords
cc
the
template
instantiation
file
makefile
the
makefile
site
specific
and
requiring
map
classes
two
views
of
a
menu
driven
program
for
manipulating
images
one
is
non
object
oriented
although
there
is
a
class
used
the
other
is
very
object
oriented
and
uses
the
command
pattern
to
implement
commands
used
within
menus
the
menus
are
text
based
first
the
non
object
oriented
version
usepix
cc
the
main
program
pixmap
h
the
interface
header
file
for
the
pixmap
class
manipulates
images
pixmap
cc
the
implementation
of
the
pixmap
class
the
object
oriented
version
uses
the
pixmap
class
too
application
h
the
main
application
class
interface
application
cc
the
main
application
class
implementation
command
h
the
abstract
base
class
for
commands
quitcommand
h
the
quit
command
class
interface
quitcommand
cc
the
quit
command
class
implementation
readcommand
h
the
read
command
class
interface
readcommand
cc
the
read
command
class
implementation
displaycommand
h
the
display
command
interface
displaycommand
cc
the
display
command
implementation
simpcommand
h
a
templated
class
using
pointers
to
member
functions
for
non
parameterized
commands
menu
h
the
menu
class
interface
menu
cc
the
menu
class
implementation
menuitem
h
the
menu
item
class
interface
menuitem
cc
the
menu
item
class
implementation
filelister
h
read
one
of
a
list
of
files
from
a
hard
wired
directory
interface
filelister
cc
templateapp
cc
template
instantiation
file
makefile
a
class
for
checking
memory
leaks
very
rudimentary
by
overloading
new
and
delete
on
a
global
basis
heapstats
h
heapstats
cc
in
class
design
exercises
programming
in
the
small
and
in
the
large
tba
tba
books
there
are
several
books
we
ll
use
in
the
course
mastering
object
oriented
design
in
c
by
cay
horstmann
java
in
a
nutshell
by
flanagan
object
oriented
design
heuristics
by
arthur
riel
optional
books
the
c
programming
language
by
bjarne
stroustrup
effective
c
50
specific
ways
to
improve
your
programs
and
designs
by
scott
meyers
design
patterns
elements
of
reusable
object
oriented
software
by
the
gang
of
four
books
on
reserve
the
mythical
man
month
by
fred
brooks
debugging
the
development
process
by
steve
maguire
teaching
staff
support
personnel
one
professor
two
tas
one
ta
one
or
more
utas
professor
owen
astrachan
office
d241
lsrc
email
ola
cs
duke
edu
or
ola
acpub
duke
edu
phone
660
6522
office
hours
monday
2
00
3
30
thursday
11
00
12
30
any
time
for
quick
questions
ta
syam
gadde
office
d230
lsrc
email
gadde
cs
duke
edu
phone
660
6516
office
hours
tuesday
2
00
3
30
wednesday
1
00
2
30
utas
trevor
selby
office
d240
lsrc
email
trevor
cs
duke
edu
phone
660
65
xx
office
hours
9
11
pm
teer
cluster
needs
verification
groups
groups
groups
for
the
first
assignment
please
fill
out
the
information
asked
for
about
groups
and
group
preferences
and
submit
it
or
turn
it
in
during
class
project
information
not
yet
available
programming
tools
getopt
information
on
parsing
command
line
arguments
using
templates
how
to
instantiate
templated
classes
when
using
g
and
some
other
compilers
that
don
t
generate
template
repositories
gprof
information
on
profiling
programs
java
references
code
and
help
information
on
cvs
and
rcs
coming
back
to
owen
astrachan
s
home
page
